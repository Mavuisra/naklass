<?php
/**
 * Script de mise en place du syst√®me de gestion multi-√©coles
 * Ce script applique les modifications n√©cessaires pour impl√©menter
 * la configuration obligatoire des nouvelles √©coles
 */

require_once 'config/database.php';

// Fonction pour afficher les messages
function displayMessage($message, $type = 'info') {
    $class = '';
    switch($type) {
        case 'success': $class = 'color: green;'; break;
        case 'error': $class = 'color: red;'; break;
        case 'warning': $class = 'color: orange;'; break;
        default: $class = 'color: blue;'; break;
    }
    echo "<div style='$class margin: 10px 0; padding: 10px; border-left: 4px solid currentColor;'>$message</div>";
}

// D√©but du script
echo "<!DOCTYPE html>
<html lang='fr'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>Configuration du syst√®me multi-√©coles - Naklass</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 20px auto; padding: 20px; }
        .header { text-align: center; margin-bottom: 30px; }
        .step { margin: 20px 0; padding: 15px; background: #f5f5f5; border-radius: 5px; }
        .step h3 { margin-top: 0; color: #333; }
    </style>
</head>
<body>
    <div class='header'>
        <h1>üè´ Configuration du syst√®me multi-√©coles Naklass</h1>
        <p>Ce script configure votre syst√®me pour g√©rer plusieurs √©tablissements scolaires.</p>
    </div>";

try {
    $database = new Database();
    $db = $database->getConnection();
    
    displayMessage("‚úÖ Connexion √† la base de donn√©es r√©ussie", 'success');
    
    // √âtape 1: V√©rifier la structure actuelle de la table ecoles
    echo "<div class='step'>";
    echo "<h3>√âtape 1: V√©rification de la structure de la table ecoles</h3>";
    
    $query = "DESCRIBE ecoles";
    $stmt = $db->prepare($query);
    $stmt->execute();
    $columns = $stmt->fetchAll();
    
    $existing_columns = array_column($columns, 'Field');
    $required_columns = [
        'configuration_complete',
        'date_configuration',
        'sigle',
        'site_web',
        'fax',
        'bp',
        'regime',
        'type_enseignement',
        'langue_enseignement',
        'devise_principale',
        'fuseau_horaire',
        'numero_autorisation',
        'date_autorisation',
        'directeur_telephone',
        'directeur_email',
        'description_etablissement'
    ];
    
    $missing_columns = array_diff($required_columns, $existing_columns);
    
    if (empty($missing_columns)) {
        displayMessage("‚úÖ Toutes les colonnes n√©cessaires sont pr√©sentes", 'success');
    } else {
        displayMessage("‚ö†Ô∏è Colonnes manquantes d√©tect√©es: " . implode(', ', $missing_columns), 'warning');
        
        // √âtape 2: Ajouter les colonnes manquantes
        echo "</div><div class='step'>";
        echo "<h3>√âtape 2: Ajout des colonnes manquantes</h3>";
        
        // Lire et ex√©cuter le script SQL
        $sql_file = 'database/school_setup_enhancement.sql';
        if (file_exists($sql_file)) {
            $sql_content = file_get_contents($sql_file);
            
            // Nettoyer le contenu et diviser en blocs de requ√™tes
            $sql_content = preg_replace('/^USE.*$/m', '', $sql_content); // Supprimer les USE
            $sql_content = preg_replace('/^--.*$/m', '', $sql_content);  // Supprimer les commentaires
            
            // Diviser par des blocs de requ√™tes prepar√©es
            $blocks = explode('DEALLOCATE PREPARE stmt;', $sql_content);
            
            foreach ($blocks as $block) {
                $block = trim($block);
                if (empty($block)) continue;
                
                // Diviser le bloc en requ√™tes individuelles
                $queries = explode(';', $block);
                
                foreach ($queries as $query) {
                    $query = trim($query);
                    if (empty($query) || strlen($query) < 10) continue;
                    
                    try {
                        $stmt = $db->prepare($query);
                        $stmt->execute();
                        
                        // Afficher seulement les requ√™tes importantes
                        if (strpos($query, 'ALTER TABLE') !== false) {
                            $match = [];
                            if (preg_match('/ADD COLUMN (\w+)/', $query, $match)) {
                                displayMessage("‚úÖ Colonne ajout√©e: " . $match[1], 'success');
                            } else {
                                displayMessage("‚úÖ Structure mise √† jour", 'success');
                            }
                        }
                    } catch (PDOException $e) {
                        // Ignorer les erreurs pour colonnes d√©j√† existantes
                        if (strpos($e->getMessage(), 'Duplicate column name') !== false || 
                            strpos($e->getMessage(), 'already exists') !== false) {
                            displayMessage("‚ÑπÔ∏è √âl√©ment d√©j√† existant (ignor√©)", 'info');
                        } else {
                            displayMessage("‚ùå Erreur: " . $e->getMessage(), 'error');
                        }
                    }
                }
            }
            
            // Ex√©cuter les requ√™tes d'index s√©par√©ment
            try {
                $db->exec("CREATE INDEX IF NOT EXISTS idx_ecoles_config_complete ON ecoles(configuration_complete)");
                $db->exec("CREATE INDEX IF NOT EXISTS idx_ecoles_sigle ON ecoles(sigle)");
                displayMessage("‚úÖ Index cr√©√©s", 'success');
            } catch (PDOException $e) {
                displayMessage("‚ÑπÔ∏è Index d√©j√† existants", 'info');
            }
            
        } else {
            displayMessage("‚ùå Fichier SQL non trouv√©: $sql_file", 'error');
        }
    }
    
    // √âtape 3: V√©rifier la configuration des √©coles existantes
    echo "</div><div class='step'>";
    echo "<h3>√âtape 3: V√©rification des √©coles existantes</h3>";
    
    $query = "SELECT id, nom, configuration_complete FROM ecoles";
    $stmt = $db->prepare($query);
    $stmt->execute();
    $ecoles = $stmt->fetchAll();
    
    if (empty($ecoles)) {
        displayMessage("‚ö†Ô∏è Aucune √©cole trouv√©e dans la base de donn√©es", 'warning');
    } else {
        foreach ($ecoles as $ecole) {
            $status = $ecole['configuration_complete'] ? '‚úÖ Configur√©e' : '‚ö†Ô∏è Configuration incompl√®te';
            displayMessage("√âcole: {$ecole['nom']} (ID: {$ecole['id']}) - $status", 
                         $ecole['configuration_complete'] ? 'success' : 'warning');
        }
    }
    
    // √âtape 4: V√©rifier les utilisateurs admin
    echo "</div><div class='step'>";
    echo "<h3>√âtape 4: V√©rification des utilisateurs administrateurs</h3>";
    
    $query = "SELECT u.id, u.nom, u.prenom, u.email, u.ecole_id, r.code as role_code, e.nom_ecole as nom_ecole
              FROM utilisateurs u 
              JOIN roles r ON u.role_id = r.id 
              LEFT JOIN ecoles e ON u.ecole_id = e.id 
              WHERE r.code = 'admin'";
    $stmt = $db->prepare($query);
    $stmt->execute();
    $admins = $stmt->fetchAll();
    
    if (empty($admins)) {
        displayMessage("‚ùå Aucun administrateur trouv√©", 'error');
    } else {
        foreach ($admins as $admin) {
            displayMessage("Admin: {$admin['prenom']} {$admin['nom']} ({$admin['email']}) - √âcole: {$admin['nom_ecole']}", 'info');
        }
    }
    
    // √âtape 5: Instructions finales
    echo "</div><div class='step'>";
    echo "<h3>√âtape 5: Instructions finales</h3>";
    
    displayMessage("üéâ Configuration termin√©e avec succ√®s !", 'success');
    echo "<p><strong>Prochaines √©tapes :</strong></p>";
    echo "<ol>";
    echo "<li>Connectez-vous en tant qu'administrateur</li>";
    echo "<li>Si votre √©cole n'est pas encore configur√©e, vous serez automatiquement redirig√© vers la page de configuration</li>";
    echo "<li>Remplissez toutes les informations de votre √©tablissement</li>";
    echo "<li>Une fois configur√©e, tous les utilisateurs de votre √©cole pourront acc√©der au syst√®me</li>";
    echo "</ol>";
    
    echo "<p><strong>Fonctionnalit√©s ajout√©es :</strong></p>";
    echo "<ul>";
    echo "<li>‚úÖ Configuration obligatoire pour les nouvelles √©coles</li>";
    echo "<li>‚úÖ Gestion des informations compl√®tes de l'√©tablissement</li>";
    echo "<li>‚úÖ V√©rification automatique avant acc√®s au syst√®me</li>";
    echo "<li>‚úÖ Interface d'attente pour les utilisateurs non-admin</li>";
    echo "<li>‚úÖ Support multi-√©tablissements</li>";
    echo "</ul>";
    
    echo "<p style='margin-top: 20px;'>";
    echo "<a href='auth/login.php' style='background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>üîë Acc√©der √† la connexion</a>";
    echo "</p>";
    
    echo "</div>";
    
} catch (PDOException $e) {
    displayMessage("‚ùå Erreur de base de donn√©es: " . $e->getMessage(), 'error');
} catch (Exception $e) {
    displayMessage("‚ùå Erreur g√©n√©rale: " . $e->getMessage(), 'error');
}

echo "</body></html>";
?>
